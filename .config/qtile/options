### Shortcuts ###

#    Key([], "XF86AudioPlay", lazy.spawn("mpc toggle")),
#    Key([], "XF86AudioNext", lazy.spawn("mpc next")),
#    Key([], "XF86AudioPrev", lazy.spawn("mpc prev")),
#    Key([], "XF86AudioStop", lazy.spawn("mpc stop")),
# Key(["mod1", "control"], "Next", lazy.spawn('conky-rotate -n')),
# Key(["mod1", "control"], "Prior", lazy.spawn('conky-rotate -p')),
# Key(["mod1", "control"], "a", lazy.spawn('xfce4-appfinder')),
# Key(["mod1", "control"], "b", lazy.spawn(MY_FILE_MANAGER)),
# Key(["mod1", "control"], "c", lazy.spawn('catfish')),
# Key(["mod1", "control"], "e", lazy.spawn('arcolinux-tweak-tool')),
# Key(["mod1", "control"], "f", lazy.spawn(MY_BROWSER)),
# Key(["mod1", "control"], "g", lazy.spawn(
#     'chromium -no-default-browser-check')),
# Key(["mod1", "control"], "i", lazy.spawn('nitrogen')),
# Key(["mod1", "control"], "k", lazy.spawn('arcolinux-logout')),
# Key(["mod1", "control"], "l", lazy.spawn('arcolinux-logout')),
# Key(["mod1", "control"], "m", lazy.spawn('xfce4-settings-manager')),
# Key(["mod1", "control"], "o", lazy.spawn(
#     home + '/.config/qtile/scripts/picom-toggle.sh')),
# Key(["mod1", "control"], "p", lazy.spawn('pamac-manager')),
# Key(["mod1", "control"], "r", lazy.spawn('rofi-theme-selector')),
# Key(["mod1", "control"], "s", lazy.spawn('spotify')),
# Key(["mod1", "control"], "t", lazy.spawn(MY_TERMINAL)),
# Key(["mod1", "control"], "u", lazy.spawn('pavucontrol')),
# Key(["mod1", "control"], "v", lazy.spawn('vivaldi-stable')),
# Key(["mod1", "control"], "w", lazy.spawn('arcolinux-welcome-app')),
# Key(["mod1", "control"], "Return", lazy.spawn(MY_TERMINAL)),
# ALT + ... KEYS
    Key(["mod1"], "f", lazy.spawn('variety -f')),
    Key(["mod1"], "h", lazy.spawn('urxvt -e htop')),
    Key(["mod1"], "n", lazy.spawn('variety -n')),
    Key(["mod1"], "p", lazy.spawn('variety -p')),
    Key(["mod1"], "t", lazy.spawn('variety -t')),
    Key(["mod1"], "Up", lazy.spawn('variety --pause')),
    Key(["mod1"], "Down", lazy.spawn('variety --resume')),
    Key(["mod1"], "Left", lazy.spawn('variety -p')),
    Key(["mod1"], "Right", lazy.spawn('variety -n')),
    Key(["mod1"], "F2", lazy.spawn('gmrun')),
    Key(["mod1"], "F3", lazy.spawn('xfce4-appfinder')),



### Autostart ###

#Set your native resolution IF it does not exist in xrandr
#More info in the script
#run $HOME/.config/qtile/scripts/set-screen-resolution-in-virtualbox.sh
#Find out your monitor name with xrandr or arandr (save and you get this line)
#xrandr --output VGA-1 --primary --mode 1360x768 --pos 0x0 --rotate normal
#xrandr --output DP2 --primary --mode 1920x1080 --rate 60.00 --output LVDS1 --off &
#xrandr --output LVDS1 --mode 1366x768 --output DP3 --mode 1920x1080 --right-of LVDS1
#xrandr --output HDMI2 --mode 1920x1080 --pos 1920x0 --rotate normal --output HDMI1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output VIRTUAL1 --off
# xrandr --newmode "1920x1080_60.00"  172.80  1920 2040 2248 2576  1080 1081 1084 1118  -HSync +Vsync
# xrandr --addmode Virtual1 "1920x1080_60.00"
# xrandr --output Virtual1 --primary --mode "1920x1080_60.00" --pos 0x0 --rotate normal
#change your keyboard if you need it
#setxkbmap -layout be
#autostart ArcoLinux Welcome App
# run dex $HOME/.config/autostart/arcolinux-welcome-app.desktop &
#Some ways to set your wallpaper besides variety or nitrogen
# feh --bg-fill /usr/share/backgrounds/arcolinux/arco-wallpaper.jpg &
#start the conky to learn the shortcuts
# (conky -c $HOME/.config/qtile/scripts/system-overview) &
#IN BETA PHASE
#start sxhkd to replace Qtile native key-bindings
#run sxhkd -c ~/.config/qtile/sxhkd/sxhkdrc &
#starting utility applications at boot time
# run pamac-tray &
# numlockx on &
# /usr/lib/xfce4/notifyd/xfce4-notifyd &
#starting user applications at boot time
#run volumeicon &
# run code
# run firefox
#run discord &
#nitrogen --restore &
#run caffeine -a &
#run vivaldi-stable &
#run firefox &
#run thunar &
#run dropbox &
#run insync start &
#run spotify &
#run atom &
#run telegram-desktop &


# @hook.subscribe.startup
# def start_always():
#     # Set the cursor to something sane in X
#     # subprocess.Popen(['xsetroot', '-cursor_name', 'left_ptr'])


### Alternate Colors ###
# COLORS FOR THE BAR AND WINDOWS
# textColor = "#ffffff"
# barBackground = "#0d0d0d"
# leftColor1 = "#f28cae"
# leftColor2 = "#98a0e7"
# rightColor1 = "#e52165"
# rightColor2 = "#0d1137"
# def colorsDict():
#     return {
#             ### Bar Background ###
#             "barBackground" : barBackground,

#             ### Sep colors ###
#             "sepForeground" : "#1a000a",
#             "sepBackground" : barBackground,

#             ### Group colors ###
#             "groupBackground" : leftColor1,
#             "groupForeground" : textColor,
#             "currentGroup" : "#2e0513",
#             "groupActive" : "#eb477e",

#             ### Layout colors ###
#             "layoutBackground" : leftColor2,
#             "layoutForeground" : textColor,

#             ### Window Name colors ###
#             "windowBackground" : barBackground,
#             "windowForeground" : textColor,

#             ### Clock colors ###
#             "clockForeground" : textColor,
#             "clockBackground" : barBackground,
            
#             ### CPU colors ###
#             "cpuBackground" : rightColor2,
#             "cpuForeground" : textColor,

#             ### Memory colors ###
#             "memoryBackground" : rightColor1,
#             "memoryForeground" : textColor,

#             ### HDD colors ###
#             "hddBackground" : rightColor2,
#             "hddForeground" : textColor,

#             ### Volume colors ###
#             "volBackground" : rightColor1,
#             "volForeground" : textColor,

#             ### Updates colors ###
#             "updateBackground" : rightColor2,
#             "updateForeground" :textColor,
#             "updatesAvailable" : "#cc0000",
            

#             ### Tray colors ###
#             "trayForeground" : textColor,
#             "trayBackground" : rightColor1,

#             ### Exit Menu ###
#             "exitForeground" : textColor,
#             "exitBackground" : rightColor2,

#             # COLORS FOR THE WINDOWS
#             "border_focus" : "#ff0066",
#             "border_normal" : "#ffe6f0",

#             }

# # print(colorsList(), colorsDict())


# ### Shade Style ###
# textColor = "#000000"
# # colorShades = ['#fff1ef', '#ffe2df', '#ffd4d0', '#ffc5c0', '#ffb7b0', '#ffa9a0', '#ff9a90', '#ff8c81', '#ff7d71', '#ff6f61']
# # colorShades = ['#ffb7b0', '#ffc5c0', '#ffd4d0', '#ffc5c0', '#ffb7b0', '#ffa9a0', '#ff9a90', '#ff8c81', '#ff7d71', '#ff6f61']
# colorShades =['9aaac5', 'aebbd1', 'c2ccdc', 'aebbd1', '9aaac5', '8599b9', '7188ae', '5d77a2', '486697', '34558b']
# # colorShades = ['#ffd0cc', '#ffb9b3', '#ffa299', '#ff8a80', '#ff7366', '#ff6f61', '#ff5b4d', '#ff4433', '#ff2d1a', '#ff1500', '#e61300']
# barBackground = colorShades[2]
# # colorShades.reverse()
# def colorsDict():
#     return {
#             ### Bar Background ###
#             "barBackground" : barBackground,

#             ### Sep colors ###
#             "sepForeground" : "#1a000a",
#             "sepBackground" : barBackground,

#             ### Group colors ###
#             "groupBackground" : colorShades[0],
#             "groupForeground" : textColor,
#             "currentGroup" : "#ffffff",
#             "groupActive" : "#eb477e",

#             ### Layout colors ###
#             "layoutBackground" : colorShades[1],
#             "layoutForeground" : textColor,

#             ### Window Name colors ###
#             "windowBackground" : barBackground,
#             "windowForeground" : textColor,

#             ### Clock colors ###
#             "clockForeground" : textColor,
#             "clockBackground" : barBackground,
            
#             ### CPU colors ###
#             "cpuBackground" : colorShades[3],
#             "cpuForeground" : textColor,

#             ### Memory colors ###
#             "memoryBackground" : colorShades[4],
#             "memoryForeground" : textColor,

#             ### HDD colors ###
#             "hddBackground" : colorShades[5],
#             "hddForeground" : textColor,

#             ### Volume colors ###
#             "volBackground" : colorShades[6],
#             "volForeground" : textColor,

#             ### Updates colors ###
#             "updateBackground" : colorShades[7],
#             "updateForeground" :textColor,
#             "updatesAvailable" : "#cc0000",
            

#             ### Tray colors ###
#             "trayForeground" : textColor,
#             "trayBackground" : colorShades[8],

#             ### Exit Menu ###
#             "exitForeground" : textColor,
#             "exitBackground" : colorShades[9],

#             # COLORS FOR THE WINDOWS
#             "border_focus" : colorShades[9],
#             "border_normal" : colorShades[0],

#             }


# ## Text change ##
# textColor = wal["special"]["background"]
# clockColor = wal["special"]["foreground"]
# barBackground =wal["special"]["background"]

# leftColor1 = wal["colors"]["color3"]
# leftColor2 = wal["colors"]["color4"]
# rightColor1 = wal["colors"]["color5"]
# rightColor2 = wal["colors"]["color6"]
# def colorsDict():
#     return {
#             ### Bar Background ###
#             "barBackground" : barBackground,

#             ### Sep colors ###
#             "sepForeground" : "#1a000a",
#             "sepBackground" : barBackground,

#             ### Group colors ###
#             "groupBackground" : barBackground,
#             "groupForeground" : leftColor1,
#             "currentGroup" : "#cc0000",
#             "groupActive" : "#aaa0ff",

#             ### Layout colors ###
#             "layoutBackground" : barBackground,
#             "layoutForeground" : leftColor2,

#             ### Window Name colors ###
#             "windowBackground" : barBackground,
#             "windowForeground" : clockColor,

#             ### Clock colors ###
#             "clockForeground" : clockColor,
#             "clockBackground" : barBackground,
            
#             ### CPU colors ###
#             "cpuBackground" : barBackground,
#             "cpuForeground" : rightColor2,

#             ### Memory colors ###
#             "memoryBackground" : barBackground,
#             "memoryForeground" : rightColor1,

#             ### HDD colors ###
#             "hddBackground" : barBackground,
#             "hddForeground" : rightColor2,

#             ### Volume colors ###
#             "volBackground" : barBackground,
#             "volForeground" : rightColor1,

#             ### Updates colors ###
#             "updateBackground" : barBackground,
#             "updateForeground" : rightColor2,
#             "updatesAvailable" : "#cc0000",
            

#             ### Tray colors ###
#             "trayForeground" : rightColor1,
#             "trayBackground" : barBackground,

#             ### Exit Menu ###
#             "exitForeground" : rightColor2,
#             "exitBackground" : barBackground,

#             # COLORS FOR THE WINDOWS
#             "border_focus" : wal["colors"]["color2"],
#             "border_normal" : wal["colors"]["color1"],

#             }
